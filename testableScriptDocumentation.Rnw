\documentclass[11pt]{article}
\usepackage{graphicx, verbatim}
\usepackage{color}
\usepackage{linguex}
\usepackage{fixltx2e}
\setlength{\textwidth}{6.5in} 
\setlength{\textheight}{9in}
\setlength{\oddsidemargin}{0in} 
\setlength{\evensidemargin}{0in}
\setlength{\topmargin}{-1.5cm}

\title{Instructions for using R script to merge testable data with demographic info}

\author{Jonathan Phillips}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle

\section{Downloading your testable data}

Download the zipped file to the folder where you want the aggregated data file to appear. Then unzip that folder to the same location.

\section{R Script walk-through}

After cleaning out the environment (this is optional but helps to keep things transparent), set the working directory to the unzipped folder that contains your testable data. Make sure that the folder does not contain any other files!

<<setwd, eval=FALSE>>=
setwd("C:/Users/Jonathan/Documents/R/testable")
@

\noindent Next, you'll store the names of all of the files in a vector, and then use that vector to read each csv file into R. They will each be assigned a name that's the same as their filename.

<<read files into R, eval=FALSE>>=

files <- list.files()
for(i in 1:length(files)) assign(files[i], read.csv(files[i],
         header=F,stringsAsFactors=F,na.strings=c("", "NA")))

@

\noindent The next bit of code grabs the names of the demographic variables you collected and all of the variables that are recorded on each trial. We then combine these to determine the number of columns the final dataframe will have.

<<names and column numbers, eval=FALSE>>=

descript <- get(files[1])[1,][!is.na(get(files[1])[1,])]
variables <- get(files[1])[3,][!is.na(get(files[1])[3,])]

colNum <- length(variables)+length(descript)

@

\noindent The next thing we do is to initalize the dataframe we are going to create. To do this, we simply use the first data file:

<<initalize dataframe, eval=FALSE>>=

d <- get(files[1])
d <- d[-c(1:3),]
colnames(d) <- variables
@

\noindent With this in hand, we grab the descriptives (for that first data file) and add them on:

<<add descriptives, eval=FALSE>>=

jd <- data.frame(get(files[1])[2,])
colnames(jd) <- descript

d[,descript] <- jd[1,descript]

@

\noindent Then we do this iteratively for each data file, while adding that data to the existing dataframe:

<<combine all data, eval=FALSE>>=

for(i in 2:length(files)){
  
  j <- get(files[i])
  j <- j[-c(1:3),]
  colnames(j) <- variables
  
  jd <- data.frame(get(files[i])[2,])
  colnames(jd) <- descript
  
  j[,descript] <- jd[1,descript]
  
  d <- rbind(d,j)
}

@

\noindent Now all that's left to do is write the new dataframe to a .csv file. We first go up a level to the parent folderand  then write the csv file.

<<save data,eval=FALSE>>=
setwd("../")
write.csv(d,file="TestData.csv", row.names=F)
@

\noindent That's it!

\section{Questions, Comments, Suggestions?}

Feel free to email me at phillips01@g.harvard.edu or suggest revisions on a branch of the github repo at https://github.com/phillipsjs/testable

\end{document}